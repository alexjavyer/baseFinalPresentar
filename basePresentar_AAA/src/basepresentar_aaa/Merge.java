/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basepresentar_aaa;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JCheckBox;
/**
 *
 * @author Anita
 */
public class Merge extends javax.swing.JFrame {

    /**
     * Creates new form Merge
     */
    String servidor1;
    String base_de_autos="Renta de Auto";
    public Merge(String servidor) {
        initComponents();
        servidor1=servidor;
        //jlColumnas.setVisible(false);
        cargarBases(servidor1);
    }
    public void cargarBases(String servidor){
        String sqlTablasSuscriptor="SELECT * FROM master.dbo.sysdatabases WHERE dbid >= 5";
        Conexion cc = new Conexion();
        //JOptionPane.showMessageDialog(null,"Suscriptor"+suscriptorName);
        boolean correcto=true;
        Connection cn=cc.conectarBase(servidor,"Renta de Auto");
        //Connection cn=cc.conectar("TOSHIBA");
        try {
            Statement psd = cn.createStatement();
            ResultSet rs=psd.executeQuery(sqlTablasSuscriptor);
                while(rs.next()){
                   //tablas.addElement(rs.getString("name"));
                   cbBaseDeDatos.addItem(rs.getString("name"));
                   //JOptionPane.showMessageDialog(null,rs.getString("name"));
                }
                
            }catch(Exception ex){
                correcto=false;
            }
        
                
    }
        DefaultTableModel modeloTabla=new DefaultTableModel();
    public void cargarTabla(String servidor){
        //String sql ="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = BASE TABLE AND TABLE_SCHEMA=dbName";
        String base_de_datos1=cbBaseDeDatos.getSelectedItem().toString();
        String sql ="USE ["+base_de_datos1+"]\n" +
        "SELECT name FROM sysobjects where xtype='U' and category <> 2";
        //  JOptionPane.showMessageDialog(null,"SQL cargarbases "+sql);
        Conexion cc = new Conexion();
        Connection cn=cc.conectarBase(servidor, base_de_datos1);
        modeloTabla=new DefaultTableModel();
        String fila[]=new String[1] ;
        String[] titulos={"Tablas"} ;
        try {
            Statement psd = cn.createStatement();
            ResultSet rs=psd.executeQuery(sql);
            if(modeloTabla.getColumnCount()<2){
            modeloTabla.addColumn(titulos[0]);
            //modeloTabla.addColumn(titulos[1]);
            }
            while(rs.next()){
                fila[0]=rs.getString("name");
              //  fila[1]="1";
                modeloTabla.addRow(fila);
            }
            tblTablas.setModel(modeloTabla);
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex+" al cargar tabla");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cbBaseDeDatos = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTablas = new javax.swing.JTable();
        chHorizontal = new javax.swing.JCheckBox();
        chVertical = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jlColumnas = new javax.swing.JList();
        btnPasarNomCol = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtColumnas = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlAtributos = new javax.swing.JList();
        cbSigno = new javax.swing.JComboBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        jlCondicion = new javax.swing.JList();
        btnAgregarFiltro = new javax.swing.JButton();
        txtCondicion = new javax.swing.JTextField();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlSigno = new javax.swing.JList();
        cbOPeradorLogico = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        jlOperadorLogico = new javax.swing.JList();
        btnCrear = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        txtNombrePubli = new javax.swing.JTextField();
        btnCancelar = new javax.swing.JButton();
        chSinFiltro = new javax.swing.JCheckBox();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Tablas");

        jLabel2.setText("Base de Datos");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        tblTablas.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null},
                {null},
                {null},
                {null}
            },
            new String [] {
                "Tablas"
            }
        ));
        jScrollPane1.setViewportView(tblTablas);

        chHorizontal.setText("Horizontal");
        chHorizontal.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chHorizontalItemStateChanged(evt);
            }
        });
        chHorizontal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chHorizontalActionPerformed(evt);
            }
        });

        chVertical.setText("Vertical");
        chVertical.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chVerticalItemStateChanged(evt);
            }
        });
        chVertical.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chVerticalActionPerformed(evt);
            }
        });

        jLabel3.setText("Filtro");

        jlColumnas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane2.setViewportView(jlColumnas);

        btnPasarNomCol.setText(">");
        btnPasarNomCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasarNomColActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar Columna");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(txtColumnas);

        jScrollPane6.setViewportView(jlAtributos);

        cbSigno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=", "<>" }));

        jScrollPane7.setViewportView(jlCondicion);

        btnAgregarFiltro.setText("Agregar Filtro");
        btnAgregarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFiltroActionPerformed(evt);
            }
        });

        jScrollPane3.setViewportView(jlSigno);

        cbOPeradorLogico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR" }));

        jScrollPane8.setViewportView(jlOperadorLogico);

        btnCrear.setText("Crear");
        btnCrear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCrearActionPerformed(evt);
            }
        });

        jLabel4.setText("Nombre Publicacion:");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(btnPasarNomCol, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                                .addComponent(jLabel4)
                                                .addGap(18, 18, 18)
                                                .addComponent(txtNombrePubli, javax.swing.GroupLayout.PREFERRED_SIZE, 127, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(39, 39, 39))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(28, 28, 28)
                                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(27, 27, 27)
                                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(cbSigno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                        .addGap(18, 18, 18)
                                                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                                .addGap(18, 18, 18)))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(cbOPeradorLogico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                                            .addComponent(btnCrear, javax.swing.GroupLayout.DEFAULT_SIZE, 63, Short.MAX_VALUE)))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(btnCancelar))))
                            .addComponent(btnAgregarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSigno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOPeradorLogico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPasarNomCol))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 97, Short.MAX_VALUE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnAgregarFiltro)
                            .addComponent(btnAgregar))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(17, 17, 17))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(btnCancelar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombrePubli, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnCrear))
                        .addGap(27, 27, 27))))
        );

        chSinFiltro.setText("Sin Filtro");
        chSinFiltro.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                chSinFiltroItemStateChanged(evt);
            }
        });
        chSinFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                chSinFiltroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(33, 33, 33)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(cbBaseDeDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(chHorizontal)
                    .addComponent(chVertical)
                    .addComponent(jLabel3)
                    .addComponent(chSinFiltro))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chHorizontal)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chVertical)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(chSinFiltro))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(cbBaseDeDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cargarTabla(servidor1);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void chVerticalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chVerticalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chVerticalActionPerformed

    private void chHorizontalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chHorizontalItemStateChanged
        String base=modeloTabla.getValueAt(tblTablas.getSelectedRow(),0).toString();
        cargarColumnas(base);
    }//GEN-LAST:event_chHorizontalItemStateChanged

    private void chVerticalItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chVerticalItemStateChanged
        // TODO add your handling code here:
        cargarColumnas("Clientes");
        //CrearColumnasCheck();
    }//GEN-LAST:event_chVerticalItemStateChanged
    boolean sinfiltro=false;
    private void chSinFiltroItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_chSinFiltroItemStateChanged
        // TODO add your handling code here:
        sinfiltro=true;
    }//GEN-LAST:event_chSinFiltroItemStateChanged
    DefaultListModel modeloSigno=new DefaultListModel();
    DefaultListModel modeloOperador=new DefaultListModel();
    private void chHorizontalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chHorizontalActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chHorizontalActionPerformed

    private void btnCrearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCrearActionPerformed
        crearPubli(servidor1);
    }//GEN-LAST:event_btnCrearActionPerformed

    private void btnAgregarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFiltroActionPerformed
        modeloCondicion.addElement(txtCondicion.getText());
        jlCondicion.setModel(modeloCondicion);
        txtCondicion.setText("");
        modeloSigno.addElement(cbSigno.getSelectedItem());
        jlSigno.setModel(modeloSigno);
        modeloOperador.addElement(cbOPeradorLogico.getSelectedItem().toString());
        jlOperadorLogico.setModel(modeloOperador);
    }//GEN-LAST:event_btnAgregarFiltroActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:

        almacenarColumnasSelectas();
    }//GEN-LAST:event_btnAgregarActionPerformed

    private void btnPasarNomColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasarNomColActionPerformed
        // TODO add your handling code here:
        PasarDatosConsulta();
    }//GEN-LAST:event_btnPasarNomColActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        // TODO add your handling code here:
        this.dispose();
        Clientes cli=new Clientes(servidor1);
        cli.show();
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void chSinFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_chSinFiltroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_chSinFiltroActionPerformed
    DefaultListModel modeloCondicion=new DefaultListModel();    
    
    public void crearPubli(String servidor){
        String nombrePubli=txtNombrePubli.getText();
        String base_de_datos=cbBaseDeDatos.getSelectedItem().toString();
        String subset_filterclause="";
        String sqlPubliMerge="";
        String sqlFiltro="null";
        String sqlAdicionalVertical="";
        boolean vertical_partition=false;
        if(sinfiltro){
            sqlFiltro="null";
        }else{
            if(chHorizontal.isSelected()){
                int cantidadFiltros=modeloCondicion.getSize();
                String operador="";
                sqlFiltro="N'";
                for(int k=0;k<cantidadFiltros;k++){
                    if(cantidadFiltros==1){
                        operador="";
                        sqlFiltro=sqlFiltro+"["+(modeloFiltroVertical.elementAt(k).toString())+"]"+modeloSigno.getElementAt(k)+"''"+modeloCondicion.elementAt(k)+"'''";
                    }else{
                        if(k==cantidadFiltros-1){
                            sqlFiltro=sqlFiltro+"["+(modeloFiltroVertical.elementAt(k).toString())+"]=''"+modeloCondicion.elementAt(k)+"'''";
                        }else{
                            sqlFiltro=sqlFiltro+"["+(modeloFiltroVertical.elementAt(k).toString())+"]=''"+modeloCondicion.elementAt(k)+"'' "+modeloOperador.getElementAt(k)+" ";
                        }
                    }
                }
            }
            if(chVertical.isSelected()){        
                vertical_partition=true;
                int repe=modelo1.getSize();
                for(int i=0;i<repe;i++){
                    sqlAdicionalVertical=sqlAdicionalVertical+" exec sp_mergearticlecolumn @publication = N'"+nombrePubli+"', @article = N'Clientes', "
                    + "@column = N'"+modelo1.getElementAt(i)+"', @operation = N'add', @force_invalidate_snapshot = 1, @force_reinit_subscription = 1\n";
                }
            }
            
        }
        String frequency_type="4";
        //frequency_interval = 0
        //String frequency_relative_interval = 0;
        sqlPubliMerge="use ["+base_de_datos+"] \n" +
        "exec sp_replicationdboption @dbname = N'"+base_de_datos+"', @optname = N'merge publish', @value = N'true' \n" +
        "-- Adding the merge publication\n" +
        " use ["+base_de_datos+"]\n" +
        " exec sp_addmergepublication @publication = N'"+nombrePubli+"', @description = N'Merge publication of database ''"+base_de_datos+"''"
        + " from Publisher ''"+servidor+"''.', @sync_mode = N'native', @retention = 14, @allow_push = N'true', @allow_pull = N'true',"
        + " @allow_anonymous = N'true', @enabled_for_internet = N'false', @snapshot_in_defaultfolder = N'true',"
        + " @compress_snapshot = N'false', @ftp_port = 21, @ftp_subdirectory = N'ftp', @ftp_login = N'anonymous', "
        + "@allow_subscription_copy = N'false', @add_to_active_directory = N'false', @dynamic_filters = N'false', "
        + "@conflict_retention = 14, @keep_partition_changes = N'false', @allow_synctoalternate = N'false', "
        + "@max_concurrent_merge = 0, @max_concurrent_dynamic_snapshots = 0, @use_partition_groups = null,"
        + " @publication_compatibility_level = N'100RTM', @replicate_ddl = 1, @allow_subscriber_initiated_snapshot = N'false',"
        + " @allow_web_synchronization = N'false', @allow_partition_realignment = N'true', @retention_period_unit = N'days',"
        + " @conflict_logging = N'both', @automatic_reinitialization_policy = 0\n" +        
        " \n" +
        " \n" +
        " exec sp_addpublication_snapshot @publication = N'"+nombrePubli+"', @frequency_type = "+frequency_type+", @frequency_interval = 1, "
        + "@frequency_relative_interval = 1, @frequency_recurrence_factor = 0, @frequency_subday = 0, @frequency_subday_interval = 0,"
        + " @active_start_time_of_day = 500, @active_end_time_of_day = 235959, @active_start_date = 0, @active_end_date = 0, "
        + "@job_login = null, @job_password = null, @publisher_security_mode = 1\n" +
        " \n" +
        " \n" +
        " use ["+base_de_datos+"]\n"+ " exec sp_addmergearticle @publication = N'"+nombrePubli+"', @article = N'Clientes', @source_owner = N'dbo', "
            + "@source_object = N'Clientes', @type = N'table', @description = null, @creation_script = null, @pre_creation_cmd = N'drop',"
            + " @schema_option = 0x000000010C034FD1, @identityrangemanagementoption = N'manual', @destination_owner = N'dbo', "
            + "@force_reinit_subscription = 1, @column_tracking = N'false', @subset_filterclause = "+sqlFiltro+", @vertical_partition = N'"+vertical_partition+"',"
            + " @verify_resolver_signature = 1, @allow_interactive_resolver = N'false', @fast_multicol_updateproc = N'true', "
            + "@check_permissions = 0, @subscriber_upload_options = 0, @delete_tracking = N'true', @compensate_for_errors = N'false', "
            + "@stream_blob_columns = N'false', @partition_options = 0\n" +
            " \n" +
            " "+sqlAdicionalVertical;
        //escribir(sqlPubliMerge);
        Conexion cc = new Conexion();
        Connection cn=cc.conectarBase(servidor1,"Renta de Auto");
        boolean seCreo=true;
        try {
            Statement psd= cn.createStatement();
            psd.executeQuery(sqlPubliMerge);
        }catch(Exception ex){
//            if(ex.getMessage().equals("La instrucción no devolvió un conjunto de resultados.")){
//            seCreo=true;
//            }else{
//              JOptionPane.showMessageDialog(null,"Error al crear publicacion Merge"+ex);
//              seCreo=false;
//            }
                         JOptionPane.showMessageDialog(null,"Error al crear publicacion Merge"+ex);
        }
//        if(seCreo){
//              JOptionPane.showMessageDialog(null,"Publicacion Merge creada");
//              this.dispose();
//              Clientes cli =new Clientes();
//              cli.show();
//        }
        
    }
      public void escribir(String codigo){
        File f;
        f = new File("C:\\Users\\Anita\\Desktop\\SCRIPTS\\PUB_MERGE_TOSHIBA.txt");

        //Escritura
        try{
        FileWriter w = new FileWriter(f);
        BufferedWriter bw = new BufferedWriter(w);
        PrintWriter wr = new PrintWriter(bw);	
        wr.write(codigo);//escribimos en el archivo 
        //wr.append(" - y aqui continua"); //concatenamos en el archivo sin borrar lo existente
                      //ahora cerramos los flujos de canales de datos, al cerrarlos el archivo quedará guardado con información escrita
                      //de no hacerlo no se escribirá nada en el archivo
        wr.close();
        bw.close();
        }catch(IOException e){};
    }
    DefaultListModel modelo1=new DefaultListModel();
    public void almacenarColumnasSelectas(){
        String seleccion;
        seleccion=jlColumnas.getSelectedValue().toString();
        modelo1.addElement(seleccion);
        txtColumnas.setModel(modelo1);
    }
    public void CrearColumnasCheck(){
        String sql="";
        String tabla="Clientes";
            String base_de_autos="ANITA";
        //    sql="SELECT COLUMN_NAME \n" +
        //    "FROM [Renta de Autos].INFORMATION_SCHEMA.COLUMNS\n" +
        //    "WHERE TABLE_NAME = N'"+nomTabla+"'";
            sql="SELECT COLUMN_NAME\n" +
        "        FROM ["+base_de_autos+"].INFORMATION_SCHEMA.COLUMNS\n" +
        "        WHERE TABLE_NAME ='"+tabla+"'";
           // JOptionPane.showMessageDialog(null,"cl "+Clientes.baseInicial);
            String [] ListaColumnas=new String[4];
            Conexion cc = new Conexion();
            Connection cn=cc.conectarBase(servidor1,base_de_autos);
            //DefaultListModel modelo=new DefaultListModel();
            //model1 = new DefaultTableModel(null,titulos);
            int i=0;
          //  modeloR=new DefaultTableModel();
             try {
                    Statement psd1 = cn.createStatement();
                    ResultSet rs1=psd1.executeQuery(sql);
                    
                    while(rs1.next()){
                        
                        JCheckBox columna=new JCheckBox(rs1.getString("COLUMN_NAME"));
                        columna.setVisible(true);
                        columna.setEnabled(true);
//                        jPanel2.add(columna);
                        //modelo.addElement(rs1.getString("COLUMN_NAME"));
                        
                    }
              //      jlColumnas.setModel(modelo);
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex+"al cargar Columnas");
                }

    }
    DefaultListModel modeloFiltroVertical=new DefaultListModel();
    public void PasarDatosConsulta(){
        String agregado=(jlColumnas.getSelectedValue().toString());
        modeloFiltroVertical.addElement(agregado);
        jlAtributos.setModel(modeloFiltroVertical);
    }
    public void cargarColumnas(String tabla){
            String sql="";
            base_de_autos=cbBaseDeDatos.getSelectedItem().toString();
        //    sql="SELECT COLUMN_NAME \n" +
        //    "FROM [Renta de Autos].INFORMATION_SCHEMA.COLUMNS\n" +
        //    "WHERE TABLE_NAME = N'"+nomTabla+"'";
            sql="SELECT COLUMN_NAME\n" +
        "        FROM ["+base_de_autos+"].INFORMATION_SCHEMA.COLUMNS\n" +
        "        WHERE TABLE_NAME ='"+tabla+"'";
           // JOptionPane.showMessageDialog(null,"cl "+Clientes.baseInicial);
            String [] ListaColumnas=new String[4];
            Conexion cc = new Conexion();
            Connection cn=cc.conectarBase(servidor1,base_de_autos);
            DefaultListModel modelo=new DefaultListModel();
            //model1 = new DefaultTableModel(null,titulos);
            int i=0;
          //  modeloR=new DefaultTableModel();
             try {
                    Statement psd1 = cn.createStatement();
                    ResultSet rs1=psd1.executeQuery(sql);
                    while(rs1.next()){
                        modelo.addElement(rs1.getString("COLUMN_NAME"));
                    }
                    jlColumnas.setModel(modelo);
                }catch(Exception ex){
                    JOptionPane.showMessageDialog(null, ex+"al cargar Columnas");
                }

    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Merge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Merge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Merge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Merge.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new Merge().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarFiltro;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnCrear;
    private javax.swing.JButton btnPasarNomCol;
    private javax.swing.JComboBox cbBaseDeDatos;
    private javax.swing.JComboBox cbOPeradorLogico;
    private javax.swing.JComboBox cbSigno;
    private javax.swing.JCheckBox chHorizontal;
    private javax.swing.JCheckBox chSinFiltro;
    private javax.swing.JCheckBox chVertical;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JList jlAtributos;
    private javax.swing.JList jlColumnas;
    private javax.swing.JList jlCondicion;
    private javax.swing.JList jlOperadorLogico;
    private javax.swing.JList jlSigno;
    private javax.swing.JTable tblTablas;
    private javax.swing.JList txtColumnas;
    private javax.swing.JTextField txtCondicion;
    private javax.swing.JTextField txtNombrePubli;
    // End of variables declaration//GEN-END:variables
}
