/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basepresentar_aaa;


import static basepresentar_aaa.Clientes.servidor;
import java.awt.Dimension;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.DefaultCellEditor;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableCellEditor;
import javax.swing.table.TableColumn;

/**
 *
 * @author Anita
 */
public class TransaInstantanea1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form Instantanea
     */
    static String servidor1;
    String servidor2;
    DefaultListModel model;
    String sqlFiltro;
    public TransaInstantanea1()
            {
               initComponents();
        this.setFocusable(true);     
         setTitle("P U B L I C A C I O N  T R A N S A C T I O N A L  S T A N D A R");
            }
    
    
   
    public TransaInstantanea1(String servidor) {
        initComponents();
        cargarTabla(servidor);
        servidor1=servidor;
        this.setFocusable(true);
                 setTitle("P U B L I C A C I O N  T R A N S A C T I O N A L  S T A N D A R");
                 jpFiltros.setVisible(false);
                 setSize(new Dimension(450,315));
                 jlTablasBase.setSelectedIndex(0);
                 btnCargar.setEnabled(false);
       
    }
    String tiempo="0",intervalo;
    
    public void cargarTabla(String servidor){
        //String sql ="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = BASE TABLE AND TABLE_SCHEMA=dbName";
        String sql ="USE ["+Clientes.baseInicial+"]\n" +
            "SELECT name FROM sysobjects where xtype='U' and name='Clientes' ";
        Conexion cc = new Conexion();
        Connection cn=cc.conectarBase(servidor, Clientes.baseInicial);
        model = new DefaultListModel();
        try {
            Statement psd = cn.createStatement();
            ResultSet rs=psd.executeQuery(sql);
            while(rs.next()){
                model.addElement(rs.getString("name"));
            }
            jlTablasBase.setModel(model);
        }catch(SQLException ex){
      //      JOptionPane.showMessageDialog(null,"SQLException ");
            errores.Gestionar(ex);
              errores.mensaje();
            
        } catch(Exception ex){
        //    JOptionPane.showMessageDialog(null,"Exception ");  
            errores.Gestionar(ex);
              errores.mensaje();   
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        chVertical = new javax.swing.JCheckBox();
        chHorizontal = new javax.swing.JCheckBox();
        jLabel5 = new javax.swing.JLabel();
        chSinFiltro = new javax.swing.JCheckBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        jlTablasBase = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtNombrePublicacion = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jButton2 = new javax.swing.JButton();
        jComboBox1 = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jcTiempo1 = new javax.swing.JComboBox();
        jcTiempo = new javax.swing.JComboBox();
        jpFiltros = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jlColumnas = new javax.swing.JList();
        btnPasarNomCol = new javax.swing.JButton();
        btnAgregar = new javax.swing.JButton();
        jScrollPane5 = new javax.swing.JScrollPane();
        txtColumnas = new javax.swing.JList();
        jScrollPane6 = new javax.swing.JScrollPane();
        jlAtributos = new javax.swing.JList();
        cbSigno = new javax.swing.JComboBox();
        jScrollPane7 = new javax.swing.JScrollPane();
        jlCondicion = new javax.swing.JList();
        btnAgregarFiltro = new javax.swing.JButton();
        txtCondicion = new javax.swing.JTextField();
        jScrollPane4 = new javax.swing.JScrollPane();
        jlSigno = new javax.swing.JList();
        cbOPeradorLogico = new javax.swing.JComboBox();
        jScrollPane8 = new javax.swing.JScrollPane();
        jlOperadorLogico = new javax.swing.JList();
        jLabel6 = new javax.swing.JLabel();
        btnCargar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        chVertical.setText("Vertical");

        chHorizontal.setText("Horizontal");

        jLabel5.setText("Filtro");

        chSinFiltro.setText("Sin Filtro");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jScrollPane1.setViewportView(jlTablasBase);

        jLabel1.setText("Tablas:");

        jLabel4.setText("Nombre de la Publicacion");

        txtNombrePublicacion.setText("pub_transactional_");

        jButton2.setText("Listo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Tiempo", "Inmediatamente" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Snapshot Agent");

        jcTiempo1.setEnabled(false);
        jcTiempo1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jcTiempo1MouseClicked(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jcTiempo1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jcTiempo1MouseReleased(evt);
            }
        });
        jcTiempo1.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcTiempo1ItemStateChanged(evt);
            }
        });
        jcTiempo1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTiempo1ActionPerformed(evt);
            }
        });

        jcTiempo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TIEMPO", "segundos", "minutos", "horas" }));
        jcTiempo.setEnabled(false);
        jcTiempo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jcTiempoActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jcTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jcTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(24, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcTiempo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jcTiempo1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 12, Short.MAX_VALUE))
        );

        jlColumnas.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane3.setViewportView(jlColumnas);

        btnPasarNomCol.setText(">");
        btnPasarNomCol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPasarNomColActionPerformed(evt);
            }
        });

        btnAgregar.setText("Agregar Columna");
        btnAgregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarActionPerformed(evt);
            }
        });

        jScrollPane5.setViewportView(txtColumnas);

        jScrollPane6.setViewportView(jlAtributos);

        cbSigno.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "=", "<", ">", ">=", "<=", "<>" }));

        jScrollPane7.setViewportView(jlCondicion);

        btnAgregarFiltro.setText("Agregar Filtro");
        btnAgregarFiltro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAgregarFiltroActionPerformed(evt);
            }
        });

        jScrollPane4.setViewportView(jlSigno);

        cbOPeradorLogico.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "AND", "OR", " " }));

        jScrollPane8.setViewportView(jlOperadorLogico);

        jLabel6.setText("Filtro");

        javax.swing.GroupLayout jpFiltrosLayout = new javax.swing.GroupLayout(jpFiltros);
        jpFiltros.setLayout(jpFiltrosLayout);
        jpFiltrosLayout.setHorizontalGroup(
            jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jpFiltrosLayout.createSequentialGroup()
                        .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jpFiltrosLayout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addGap(20, 20, 20)
                                .addComponent(btnPasarNomCol, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(136, 136, 136))
                            .addGroup(jpFiltrosLayout.createSequentialGroup()
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(27, 27, 27)))
                        .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jpFiltrosLayout.createSequentialGroup()
                                .addComponent(cbSigno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jpFiltrosLayout.createSequentialGroup()
                                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(18, 18, 18)
                        .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbOPeradorLogico, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 63, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jpFiltrosLayout.createSequentialGroup()
                        .addComponent(btnAgregar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnAgregarFiltro, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpFiltrosLayout.setVerticalGroup(
            jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpFiltrosLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbSigno, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtCondicion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbOPeradorLogico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPasarNomCol)
                    .addComponent(jLabel6))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 102, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 102, Short.MAX_VALUE)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addGroup(jpFiltrosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpFiltrosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(btnAgregarFiltro))
                    .addGroup(jpFiltrosLayout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpFiltrosLayout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addComponent(btnAgregar)))
                .addGap(52, 52, 52))
        );

        btnCargar.setText("Cargar Campos");
        btnCargar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarActionPerformed(evt);
            }
        });

        jButton5.setText("Filtros");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jButton4.setText("Sin Filtros");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton3.setText("Crear");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton1.setText("Salir");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(18, 18, 18)
                                .addComponent(txtNombrePublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(70, 70, 70))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(59, 59, 59)
                                        .addComponent(btnCargar)
                                        .addGap(54, 54, 54))
                                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton5, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton4))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addGap(29, 29, 29)
                .addComponent(jpFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtNombrePublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(btnCargar)
                                .addGap(22, 22, 22)
                                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton5)
                            .addComponent(jButton4))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jButton3)
                            .addComponent(jButton1))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jpFiltros, javax.swing.GroupLayout.PREFERRED_SIZE, 244, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(jComboBox1.getSelectedItem()=="Tiempo"){
            jcTiempo.setEnabled(true);
            jcTiempo1.setEnabled(true);
        }else{
            if(jComboBox1.getSelectedItem()=="Inmediatamente"){
                jcTiempo.setEnabled(false);
                jcTiempo1.setEnabled(false);
                jcTiempo.setSelectedIndex(0);
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        crearPublicacion();
        correrPublicacion();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jcTiempoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTiempoActionPerformed
        // TODO add your handling code here:
             jcTiempo1.removeAllItems();

        if(jcTiempo.getSelectedItem().toString().contains("segundos")){
            intervalo = "2";
   //         jcTiempo1.removeAllItems();

            for(int i=10;i<60;i++){
                jcTiempo1.addItem(i);
            }
        }
        //else{
            if(jcTiempo.getSelectedItem().toString().contains("minutos")){
                intervalo = "4";
     //           jcTiempo1.removeAllItems();

                for(int i=1;i<60;i++){
                    jcTiempo1.addItem(i);
                }
            }
            //else{
                if(jcTiempo.getSelectedItem().toString().contains("horas")){
                    intervalo = "8";
       //             jcTiempo1.removeAllItems();

                    for(int i=1;i<=12;i++){
                        jcTiempo1.addItem(i);
                    }
              //  }
            }
       // }
    }//GEN-LAST:event_jcTiempoActionPerformed

    private void jcTiempo1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jcTiempo1ActionPerformed
        // TODO add your handling code here:
  //         tiempo = jcTiempo1.getSelectedItem().toString();
 //      else
  //          if(jcTiempo.getSelectedItem().toString().contains("segundos"))
 //           tiempo = jcTiempo1.getSelectedItem().toString();
 //      else
 //                if(jcTiempo.getSelectedItem().toString().contains("horas"))
   //         tiempo = jcTiempo1.getSelectedItem().toString();
       
    }//GEN-LAST:event_jcTiempo1ActionPerformed

    public static final String[] DATA = { "=",">","<",">=","<=","like","<>" };
    
    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.dispose();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void btnPasarNomColActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPasarNomColActionPerformed
        // TODO add your handling code here:
        PasarDatosConsulta();
    }//GEN-LAST:event_btnPasarNomColActionPerformed

    private void btnAgregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarActionPerformed
        // TODO add your handling code here:
        almacenarColumnasSelectas();
    }//GEN-LAST:event_btnAgregarActionPerformed

    int m =0;
    String condicion[] = new String[20];
    String igualdad[] = new String[20];
    String logico[] = new String[20];
    private void btnAgregarFiltroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAgregarFiltroActionPerformed
     //   verdad="true";
        condicion[m] = cbSigno.getSelectedItem().toString();
        igualdad[m] = txtCondicion.getText();
        logico[m] =  cbOPeradorLogico.getSelectedItem().toString();
    m++;    
        modeloCondicion.addElement(txtCondicion.getText());
        jlCondicion.setModel(modeloCondicion);
        txtCondicion.setText("");
        modeloSigno.addElement(cbSigno.getSelectedItem());
        jlSigno.setModel(modeloSigno);
        modeloOperador.addElement(cbOPeradorLogico.getSelectedItem().toString());
        jlOperadorLogico.setModel(modeloOperador);
        

    }//GEN-LAST:event_btnAgregarFiltroActionPerformed

    DefaultTableModel modeloTabla=new DefaultTableModel();
    
    private void btnCargarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarActionPerformed
        // TODO add your handling code here:
        String base= jlTablasBase.getSelectedValue().toString();
        cargarColumnas(base);
        

    }//GEN-LAST:event_btnCargarActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jcTiempo1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcTiempo1MouseClicked
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jcTiempo1MouseClicked

    private void jcTiempo1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcTiempo1MousePressed
        // TODO add your handling code here:
       
    }//GEN-LAST:event_jcTiempo1MousePressed

    private void jcTiempo1ItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcTiempo1ItemStateChanged
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jcTiempo1ItemStateChanged

    private void jcTiempo1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jcTiempo1MouseReleased
        // TODO add your handling code here:
    
    }//GEN-LAST:event_jcTiempo1MouseReleased

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jpFiltros.setVisible(false);
        verdad = "false";
        setSize(new Dimension(450,315));
        btnCargar.setEnabled(false);
     
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        verdad="true";
                         setSize(new Dimension(890,315));
        jpFiltros.setVisible(true);
        btnCargar.setEnabled(true);
        
    }//GEN-LAST:event_jButton5ActionPerformed
      public void crearPub(){
        Conexion cc = new Conexion();
        //JOptionPane.showMessageDialog(null, "El servidor "+servidor1);
        //Connection cn=cc.conectarBase(servidor1, "Renta de Autos");
        //String servidor33="TOSHIBA".concat("'\'").concat("PRINCIPAL");
        Connection cn=cc.conectarBase(servidor1, "Renta de Auto");
        String sqlCrearPublicacion="";
        sqlCrearPublicacion="-- Enabling the replication database\n" +
"use master\n" +
"exec sp_replicationdboption @dbname = N'"+Clientes.baseInicial+"', @optname = N'publish', @value = N'true'\n" +

"\n" +
"-- Adding the snapshot publication\n" +
"use ["+Clientes.baseInicial+"]\n" +
"exec sp_addpublication @publication = N'Pub_11', @description = N'Snapshot publication of database ''"+Clientes.baseInicial+"'' from Publisher ''TOSHIBA''.', @sync_method = N'native', @retention = 0, @allow_push = N'true', @allow_pull = N'true', @allow_anonymous = N'true', @enabled_for_internet = N'false', @snapshot_in_defaultfolder = N'true', @compress_snapshot = N'false', @ftp_port = 21, @ftp_login = N'anonymous', @allow_subscription_copy = N'false', @add_to_active_directory = N'false', @repl_freq = N'snapshot', @status = N'active', @independent_agent = N'true', @immediate_sync = N'true', @allow_sync_tran = N'false', @autogen_sync_procs = N'false', @allow_queued_tran = N'false', @allow_dts = N'false', @replicate_ddl = 1\n" +

"\n" +
"\n" +
"exec sp_addpublication_snapshot @publication = N'Pub_11', @frequency_type = 1, @frequency_interval = 0, @frequency_relative_interval = 0, @frequency_recurrence_factor = 0, @frequency_subday = 0, @frequency_subday_interval = 0, @active_start_time_of_day = 0, @active_end_time_of_day = 235959, @active_start_date = 0, @active_end_date = 0, @job_login = null, @job_password = null, @publisher_security_mode = 1\n" +
"\n" +
"\n" +
"use ["+Clientes.baseInicial+"]\n" +
"exec sp_addarticle @publication = N'Pub_11', @article = N'Clientes', @source_owner = N'dbo', @source_object = N'Clientes', @type = N'logbased', @description = null, @creation_script = null, @pre_creation_cmd = N'drop', @schema_option = 0x000000000803509D, @identityrangemanagementoption = N'manual', @destination_table = N'Clientes', @destination_owner = N'dbo', @vertical_partition = N'false'\n" +

"\n" +
"\n" +
"\n" +
"";
        //JOptionPane.showMessageDialog(null, "sentencia sql "+sqlCrearPublicacion);
        try {
            Statement psd= cn.createStatement();
            ResultSet rs=psd.executeQuery(sqlCrearPublicacion);
            //sS_Pull_Cont_Inme();
            
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex+"Reportar");
        }

    }
    String verdad="false";
      
      public void crearPublicacion(){
        Conexion cc = new Conexion();
        Connection cn=cc.conectarBase(servidor1, Clientes.baseInicial);
        String sqlCrearPublicacion="";
        String frequency_type="1",frequency_interval="0",frequency_relative_interval="0",frequency_subday="0",frequency_subday_interval="0",nombrePub="";
        String sqlFiltro="";
        String nombreTabla;
        if(jlTablasBase.isSelectionEmpty()){
            JOptionPane.showMessageDialog(null,"Selecciones una base de datos");
        }else{
        nombreTabla=jlTablasBase.getSelectedValue().toString();
        nombrePub=txtNombrePublicacion.getText();
        String sqlParte4="",sqlParte5="",sqlFiltroCol1="",sqlFiltroCol2="";
        boolean verticalPartition=false;
        boolean conFiltros=true;
        boolean allowAnonymous=true;
        boolean inmediateSync=true;

        if(jComboBox1.getSelectedItem().equals("Tiempo")){   
            if(jcTiempo.getSelectedItem().equals("segundos")){
            frequency_type="4";
            frequency_interval="1";
            frequency_relative_interval="1";
            frequency_subday="2";
            frequency_subday_interval=jcTiempo1.getSelectedItem().toString();
            }else{
            if(jcTiempo.getSelectedItem().equals("horas")){
                frequency_type="4";
                frequency_interval="1";
                frequency_relative_interval="1";
                frequency_subday="8";
                frequency_subday_interval=jcTiempo1.getSelectedItem().toString();
            }else{
                if(jcTiempo.getSelectedItem().equals("minutos")){
                    frequency_type="4";
                    frequency_interval="1";
                    frequency_relative_interval="1";
                    frequency_subday="4";
                    frequency_subday_interval=jcTiempo1.getSelectedItem().toString();
               }
            }
            }
            
        }
        
        filtros = getSQLFIltros();
        filtroFilas= filtroVertical();
        filtroS = filtroVertical1();
        
       // JOptionPane.showMessageDialog(null, filtros+"\n"+filtroFilas+"\n"+filtroS);
        
       sqlCrearPublicacion="-- Enabling the replication database\n" +
"use master\n" +
"exec sp_replicationdboption @dbname = N'"+Clientes.baseInicial+"', @optname = N'publish', @value = N'true'\n" +
"-- Adding the transactional publication\n" +
"use ["+Clientes.baseInicial+"]\n" +
"exec sp_addpublication @publication = N'"+nombrePub+"', @description = N'Transactional publication of database ''"+Clientes.baseInicial+"'' from Publisher ''"+servidor+"''.', @sync_method = N'concurrent', @retention = 0, @allow_push = N'true', @allow_pull = N'true', @allow_anonymous = N'true', @enabled_for_internet = N'false', @snapshot_in_defaultfolder = N'true', @compress_snapshot = N'false', @ftp_port = 21, @ftp_login = N'anonymous', @allow_subscription_copy = N'false', @add_to_active_directory = N'false', @repl_freq = N'continuous', @status = N'active', @independent_agent = N'true', @immediate_sync = N'true', @allow_sync_tran = N'false', @autogen_sync_procs = N'false', @allow_queued_tran = N'false', @allow_dts = N'false', @replicate_ddl = 1, @allow_initialize_from_backup = N'false', @enabled_for_p2p = N'false', @enabled_for_het_sub = N'false'\n" +
"exec sp_addpublication_snapshot @publication = N'"+nombrePub+"', @frequency_type = "+frequency_type+", @frequency_interval = "+frequency_interval+", @frequency_relative_interval = "+frequency_relative_interval+", @frequency_recurrence_factor = 0, @frequency_subday = "+frequency_subday+", @frequency_subday_interval = "+frequency_subday_interval+", @active_start_time_of_day = 0, @active_end_time_of_day = 235959, @active_start_date = 0, @active_end_date = 0, @job_login = null, @job_password = null, @publisher_security_mode = 1\n" +
"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'sa'\n" +
"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'NT AUTHORITY\\SYSTEM'\n" +
//"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'JAvy-PC\\JAvy'\n" +
"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'NT SERVICE\\SQLSERVERAGENT'\n" +
"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'NT SERVICE\\MSSQLSERVER'\n" +
"exec sp_grant_publication_access @publication = N'"+nombrePub+"', @login = N'distributor_admin'\n" +
"\n" +
"-- Adding the transactional articles\n" +
"use ["+Clientes.baseInicial+"]\n" +
"exec sp_addarticle @publication = N'"+nombrePub+"', @article = N'CLIENTES', @source_owner = N'dbo', @source_object = N'CLIENTES', @type = N'logbased', @description = N'', @creation_script = N'', @pre_creation_cmd = N'drop', @schema_option = 0x000000000803509F, @identityrangemanagementoption = N'none', @destination_table = N'CLIENTES', @destination_owner = N'dbo', @status = 24, @vertical_partition = N'"+verdad+"', @ins_cmd = N'CALL [dbo].[sp_MSins_dboCLIENTES]', @del_cmd = N'CALL [dbo].[sp_MSdel_dboCLIENTES]', @upd_cmd = N'SCALL [dbo].[sp_MSupd_dboCLIENTES]'\n" +
                
        filtros +"  "+ filtroFilas +"  "+ filtroS ;
       boolean exitosa=true;
        try {
            PreparedStatement psd= cn.prepareStatement(sqlCrearPublicacion);
            psd.execute();
            JOptionPane.showMessageDialog(null, "Publicacion Creada!");
             this.dispose();
        }catch(SQLException ex){
          //  JOptionPane.showMessageDialog(null,"SQLException "+ex);
            errores.Gestionar(ex);
              errores.mensaje();
            
        } catch(Exception ex){
          //  JOptionPane.showMessageDialog(null,"Exception ");  
            errores.Gestionar(ex);
              errores.mensaje();   
        }
        }
    }

    DefaultTableModel modeloR;
      DefaultTableModel model1;
    public void filtrarColumna(){
//        int tamaño=modeloR.size();
//        String []titulo=new String[tamaño];
//        sqlFiltro="SELECT "+txtFiltro.getText()+" FROM "+jlTablasBase.getSelectedValue();
//        JOptionPane.showMessageDialog(null, "Filtro Columna sql: "+sqlFiltro);
    }
    public void filtrarFila(){
//        sqlFiltro="SELECT * FROM "+jlTablasBase.getSelectedValue()+" "
//                + "where "+cbCampos.getSelectedItem()+" "+cbSigno.getSelectedItem()+" '"+txtFiltro1.getText()+"'";
//        JOptionPane.showMessageDialog(null, "Filtro Fila sql: "+sqlFiltro);
    }
    
   public static  String nombreJob="";
    
    void seleccionaJob(){
     String sql="";
        sql = "SELECT  name \n" +
              "FROM    msdb.dbo.sysjobs J\n" +
              "WHERE   name like '%"+Clientes.baseInicial+"-"+txtNombrePublicacion.getText()+"%'\n" + "";
            Conexion cc = new Conexion();
            Connection cn=cc.conectar(servidor1);
        try {
            Statement psd1 = cn.createStatement();
            ResultSet rs1=psd1.executeQuery(sql);
            while(rs1.next()){
                nombreJob=(rs1.getString("name"));
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex+"al cargar tabla");
        }   
    }
    
    void correrPublicacion(){
        seleccionaJob();
        String sql="USE msdb ;\n" +
        "EXEC dbo.sp_start_job N'"+nombreJob+"' ;";
        Conexion cc = new Conexion();
        Connection cn=cc.conectar(servidor1);
         try {
            PreparedStatement psd= cn.prepareStatement(sql);
            psd.execute();
        }catch(SQLException ex){
        //    JOptionPane.showMessageDialog(null,"SQLException ");
            errores.Gestionar(ex);
              errores.mensaje();    
        } catch(Exception ex){
        //    JOptionPane.showMessageDialog(null,"Exception ");  
            errores.Gestionar(ex);
              errores.mensaje();   
        }
    }
    
    
    // filtros
    public static String columnasMandarTabla = "";
    String filtros,filtroFilas,filtroS;
  int contador;
  
  
      
    
  DefaultListModel modeloCondicion=new DefaultListModel();    
  DefaultListModel modeloSigno=new DefaultListModel();
    DefaultListModel modeloOperador=new DefaultListModel();
     DefaultListModel modelo1=new DefaultListModel();
  DefaultListModel modeloFiltroVertical=new DefaultListModel();
  boolean sinfiltro=false;
  
  public String getSQLFIltros(){
        String sqlFiltro="";
        //JOptionPane.showMessageDialog(null, "Valork" + k);
                for(int k1=0;k1<k;k1++){
                    sqlFiltro = sqlFiltro + "exec sp_articlecolumn @publication = N'"+txtNombrePublicacion.getText()+"', @article = N'CLIENTES', @column = N'"+filtroColum[k1]+"', @operation = N'add', @force_invalidate_snapshot = 1, @force_reinit_subscription = 1 \n";
                }
          return sqlFiltro;
     }
  
  int menos =0;
  public String filtroVertical()
          {       
              String sqlAdicionalVertical="";
              contador++;
              sqlAdicionalVertical="exec sp_articlefilter @publication = N'"+txtNombrePublicacion.getText()+"', @article = N'CLIENTES', @filter_name = N'FLTR_CLIENTES_"+contador+"__57', @filter_clause = N'";
              for(int i=0;i<m;i++){
                  if(i==m)
                      menos =1;
                  else
                      menos=0;
       sqlAdicionalVertical=sqlAdicionalVertical+"["+filtroFila[i]+"] "+condicion[i]+"''"+igualdad[i]+"'' "+logico[i+menos]+" ";               
              }
              sqlAdicionalVertical=sqlAdicionalVertical+"', @force_invalidate_snapshot = 1, @force_reinit_subscription = 1 \n";
                return sqlAdicionalVertical;
            }
            
  
  
  public String filtroVertical1()
          {       
              String sqlAdicionalVertical1="";
         contador++;
              sqlAdicionalVertical1="exec sp_articleview @publication = N'"+txtNombrePublicacion.getText()+"', @article = N'CLIENTES', @view_name = N'SYNC_CLIENTES_"+contador+"__57', @filter_clause = N'";
              for(int i=0;i<m;i++){
                 if(i==m)
                      menos =1;
                  else
                      menos=0;

       sqlAdicionalVertical1=sqlAdicionalVertical1+"["+filtroFila[i]+"] "+condicion[i]+"''"+igualdad[i]+"'' "+logico[i+menos]+" "; 
                }
              sqlAdicionalVertical1=sqlAdicionalVertical1+"', @force_invalidate_snapshot = 1, @force_reinit_subscription = 1 \n";
                return sqlAdicionalVertical1;
            }
                 
  
    int k=0;
    String filtroColum [] = new String [20];
    int l=0;
    String filtroFila [] = new String [20];
    
    public void almacenarColumnasSelectas(){
    //    verdad = "true";
        String seleccion;
        seleccion=jlColumnas.getSelectedValue().toString();
        filtroColum[k]= seleccion;
        k++;
        modelo1.addElement(seleccion);
        txtColumnas.setModel(modelo1);
    }
    
    String base_de_autos="";
    
    public void cargarColumnas(String tabla){
            String sql="";
            base_de_autos= Clientes.baseInicial;
            sql="SELECT COLUMN_NAME\n" +
                "        FROM ["+base_de_autos+"].INFORMATION_SCHEMA.COLUMNS\n" +
                "        WHERE TABLE_NAME ='"+tabla+"'";
            String [] ListaColumnas=new String[4];
            Conexion cc = new Conexion();
            Connection cn=cc.conectarBase(servidor1,base_de_autos);
            DefaultListModel modelo=new DefaultListModel();
            //model1 = new DefaultTableModel(null,titulos);
            int i=0;
          //  modeloR=new DefaultTableModel();
             try {
                    Statement psd1 = cn.createStatement();
                    ResultSet rs1=psd1.executeQuery(sql);
                    while(rs1.next()){
                        modelo.addElement(rs1.getString("COLUMN_NAME"));
                    }
                    jlColumnas.setModel(modelo);
                }catch(SQLException ex){
             //       JOptionPane.showMessageDialog(null,"SQLException ");
                    errores.Gestionar(ex);
                    errores.mensaje(); 
                }catch(Exception ex){
              //      JOptionPane.showMessageDialog(null,"Exception ");  
                    errores.Gestionar(ex);
                    errores.mensaje();   
                }
    }
    
    public void PasarDatosConsulta(){
        String agregado=(jlColumnas.getSelectedValue().toString());
        filtroFila[l]=agregado;
        l++;
        modeloFiltroVertical.addElement(agregado);
        jlAtributos.setModel(modeloFiltroVertical);
    }
    
    
    
    
    
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransaInstantanea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransaInstantanea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransaInstantanea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransaInstantanea1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TransaInstantanea1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAgregar;
    private javax.swing.JButton btnAgregarFiltro;
    private javax.swing.JButton btnCargar;
    private javax.swing.JButton btnPasarNomCol;
    private javax.swing.JComboBox cbOPeradorLogico;
    private javax.swing.JComboBox cbSigno;
    private javax.swing.JCheckBox chHorizontal;
    private javax.swing.JCheckBox chSinFiltro;
    private javax.swing.JCheckBox chVertical;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    public javax.swing.JComboBox jcTiempo;
    public javax.swing.JComboBox jcTiempo1;
    private javax.swing.JList jlAtributos;
    private javax.swing.JList jlColumnas;
    private javax.swing.JList jlCondicion;
    private javax.swing.JList jlOperadorLogico;
    private javax.swing.JList jlSigno;
    private javax.swing.JList jlTablasBase;
    private javax.swing.JPanel jpFiltros;
    private javax.swing.JList txtColumnas;
    private javax.swing.JTextField txtCondicion;
    private javax.swing.JTextField txtNombrePublicacion;
    // End of variables declaration//GEN-END:variables
}
