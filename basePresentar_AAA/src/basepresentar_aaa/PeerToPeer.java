/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package basepresentar_aaa;

import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Anita
 */
public class PeerToPeer extends javax.swing.JFrame {

    /**
     * Creates new form PeerToPeer
     */
    String servidor1;
    public PeerToPeer(String serv) {
        initComponents();
        cargarTabla(serv);
        servidor1=serv;
    }

    public void cargarTabla(String servidor){
        //String sql ="SELECT TABLE_NAME FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_TYPE = BASE TABLE AND TABLE_SCHEMA=dbName";
        String base_de_datos="Renta de Autos";
        String sql ="USE ["+base_de_datos+"]\n" +
        "SELECT name FROM sysobjects where xtype='U' and name='Clientes' ";
        Conexion cc = new Conexion();
        Connection cn=cc.conectarBase(servidor, base_de_datos);
        
        try {
            Statement psd = cn.createStatement();
            ResultSet rs=psd.executeQuery(sql);
            while(rs.next()){
                cbTablas.addItem(rs.getString("name"));
            }
        }catch(Exception ex){
            JOptionPane.showMessageDialog(null, ex+" al cargar tabla");
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtNombrePublicacion = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cbTablas = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        btnSiguiente = new javax.swing.JButton();
        btnFinalizar = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        cbSitios = new javax.swing.JComboBox();
        jButton1 = new javax.swing.JButton();
        cbBasesDatos = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre de la Publicación");

        jLabel2.setText("Tablas");

        jLabel3.setText("Renta de Autos");

        btnSiguiente.setText("Siguiente");
        btnSiguiente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSiguienteActionPerformed(evt);
            }
        });

        btnFinalizar.setText("Finalizar");
        btnFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFinalizarActionPerformed(evt);
            }
        });

        jLabel4.setText("Añadir Nodo");

        jLabel5.setText("Configuración P2P");

        cbSitios.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "TOSHIBA", "TOSHIBA\\SITIOA" }));

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel6.setText("Bases de Datos");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnFinalizar)
                                .addGap(42, 42, 42))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnSiguiente)
                                .addContainerGap())))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel6))
                                .addGap(31, 31, 31)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(txtNombrePublicacion)
                                            .addComponent(cbTablas, 0, 161, Short.MAX_VALUE)
                                            .addComponent(cbSitios, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 27, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(cbBasesDatos, javax.swing.GroupLayout.PREFERRED_SIZE, 160, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addContainerGap(29, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtNombrePublicacion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(7, 7, 7)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(cbTablas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnSiguiente)
                        .addGap(15, 15, 15))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(3, 3, 3)
                        .addComponent(jButton1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                        .addComponent(btnFinalizar)
                        .addContainerGap())
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(cbSitios, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(cbBasesDatos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSiguienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSiguienteActionPerformed
        j++;
        crearP2P(servidor1,"Renta de Autos",j);
    }//GEN-LAST:event_btnSiguienteActionPerformed

    private void btnFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFinalizarActionPerformed
        String sitio=cbSitios.getSelectedItem().toString();
        String bd=cbBasesDatos.getSelectedItem().toString();
        //Create a push subscription Subscriber: TOSHIBA\SITIOA
        //JOptionPane.showMessageDialog(null,"Publicador "+servidor1 +" Subscriptor: "+sitio+" Base del Subscriptor "+bd);
        crearSubscribciones(servidor1, sitio, "Renta de Autos",bd);
        //Create a peer-to-peer transactional publication
        JOptionPane.showMessageDialog(null,sitio);
        crearPublicacion(sitio);
        //Create a push subscription Subscriber: TOSHIBA
        crearSubscribciones(sitio,servidor1,bd,"Renta de Autos");
        //crearSubscribciones(sitio,servidor1,);
    }//GEN-LAST:event_btnFinalizarActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        cargarBasesDeDatos();
    }//GEN-LAST:event_jButton1ActionPerformed
    public void cargarBasesDeDatos(){
        //String[] tablas=new String();
        String sitioS;
        sitioS=cbSitios.getSelectedItem().toString();
        char slash=92;
//        suscriptorName="TOSHIBA".concat(String.valueOf(slash)).concat("SITIOA");
      //  Vector tablas=new Vector();
        String sqlTablasSuscriptor="SELECT * FROM master.dbo.sysdatabases WHERE dbid >= 5";
        Conexion cc = new Conexion();
        //JOptionPane.showMessageDialog(null,"Suscriptor"+suscriptorName);
        
        Connection cn=cc.conectar(sitioS);
        //Connection cn=cc.conectar("TOSHIBA");
        try {
            Statement psd = cn.createStatement();
            ResultSet rs=psd.executeQuery(sqlTablasSuscriptor);
                while(rs.next()){
                   //tablas.addElement(rs.getString("name"));
                   cbBasesDatos.addItem(rs.getString("name"));
                   //JOptionPane.showMessageDialog(null,rs.getString("name"));
                }
                
            }catch(Exception ex)
            {
                    JOptionPane.showMessageDialog(null,"Error al cargar las tablas"+ex);
            }
        }
    int j=0;
    public void crearPublicacion(String sitio){
        j++;
        crearP2P(sitio,cbBasesDatos.getSelectedItem().toString(),j);
    }
    public void crearSubscribciones(String sitioPUB,String sitioSUB,String bdPub,String bdSub){
        String nombrePubli=txtNombrePublicacion.getText();
        //String baseDatos=cbBasesDatos.getSelectedItem().toString();
        String nodo=cbSitios.getSelectedItem().toString();
        char signo=92;
//        if(sitioPUB.equals("TOSHIBA".concat(String.valueOf(signo)).concat("SITIOA"))){
//            sitioPUB="TOSHIBA".concat(String.valueOf(signo)).concat(String.valueOf(signo)).concat("SITIOA");
//        }
//        JOptionPane.showMessageDialog(null,"SITIOPUB "+sitioPUB);
//        if(sitioSUB.equals("TOSHIBA".concat(String.valueOf(signo)).concat("SITIOA"))){
//            sitioSUB="TOSHIBA".concat(String.valueOf(signo)).concat(String.valueOf(signo)).concat("SITIOA");
//        }
        JOptionPane.showMessageDialog(null,"SITIOSUB "+sitioSUB);
        //sync type replication support only
        String sqlAñadirSubscriptor2="use ["+bdPub+"]\n" +
        " exec sp_addsubscription @publication = N'"+nombrePubli+"', @subscriber = N'"+sitioSUB+"', @destination_db = N'"+bdSub+"', "
        + "@subscription_type = N'Push', @sync_type = N'automatic', @article = N'all', @update_mode = N'read only', "
        + "@subscriber_type = 0 \n" +
        " exec sp_addpushsubscription_agent @publication = N'"+nombrePubli+"', @subscriber = N'"+sitioSUB+"', @subscriber_db = N'"+bdSub+"',"
        + " @job_login = null, @job_password = null, @subscriber_security_mode = 1, @frequency_type = 64, @frequency_interval = 0,"
        + " @frequency_relative_interval = 0, @frequency_recurrence_factor = 0, @frequency_subday = 0, @frequency_subday_interval = 0,"
        + " @active_start_time_of_day = 0, @active_end_time_of_day = 235959, @active_start_date = 20160125, @active_end_date = 99991231, "
        + "@enabled_for_syncmgr = N'False', @dts_package_location = N'Distributor'";
        sqlAñadirSubscriptor2="use ["+bdPub+"]\n" +
        "exec sp_addsubscription @publication = N'"+nombrePubli+"', @subscriber = N'"+sitioSUB+"', @destination_db = N'"+bdSub+"', @subscription_type = N'Push', @sync_type = N'replication support only', @article = N'all', @update_mode = N'read only', @subscriber_type = 0\n" +
        "exec sp_addpushsubscription_agent @publication = N'"+nombrePubli+"', @subscriber = N'"+sitioSUB+"', @subscriber_db = N'"+bdSub+"', @job_login = null, @job_password = null, @subscriber_security_mode = 1, @frequency_type = 64, @frequency_interval = 0, @frequency_relative_interval = 0, @frequency_recurrence_factor = 0, @frequency_subday = 0, @frequency_subday_interval = 0, @active_start_time_of_day = 0, @active_end_time_of_day = 235959, @active_start_date = 20160126, @active_end_date = 99991231, @enabled_for_syncmgr = N'False', @dts_package_location = N'Distributor'";
                
        escribir(sqlAñadirSubscriptor2);
        Conexion cc = new Conexion();
        //JOptionPane.showMessageDialog(null,"Suscriptor"+suscriptorName);
        Connection cn=cc.conectar(sitioPUB);
       
       // escribir(sqlCrearSubs);
        try {
            Statement psd = cn.createStatement();
            psd.executeQuery(sqlAñadirSubscriptor2);
            }catch(Exception ex){
                JOptionPane.showMessageDialog(null,"Error al crear subscripcion "+ex);
            }
        
    }
    public void escribir(String codigo){
        File f;
        f = new File("C:\\Users\\Anita\\Documents\\DOCUMENTOS\\UNIVERSIDAD\\SEMESTRES\\6. SEXTO\\SBD DISTRIBUIDOS\\Segundo Parcial\\Proyecto\\GenerandoPubSnap\\ProbandoSnapshot.txt");

        //Escritura
        try{
        FileWriter w = new FileWriter(f);
        BufferedWriter bw = new BufferedWriter(w);
        PrintWriter wr = new PrintWriter(bw);	
        wr.write(codigo);//escribimos en el archivo 
        //wr.append(" - y aqui continua"); //concatenamos en el archivo sin borrar lo existente
                      //ahora cerramos los flujos de canales de datos, al cerrarlos el archivo quedará guardado con información escrita
                      //de no hacerlo no se escribirá nada en el archivo
        wr.close();
        bw.close();
        }catch(IOException e){};
    }
    public void crearP2P(String sitio,String baseDatos,int id){
        JOptionPane.showMessageDialog(null,"sitioPublicador "+sitio+" Base de Datos "+baseDatos+" ID "+id);
        String nombrePubli=txtNombrePublicacion.getText();
         //@allow_initialize_from_backup = N'false'
        String sqlP2Pconflict="exec sp_configure_peerconflictdetection @publication = '"+nombrePubli+"'\n" +
        "     ,  @action = 'enable'\n" +
        "     ,  @originator_id = "+id+" \n" +
        "     ,  @continue_onconflict = N'false' \n";        
        String sqlCrearTransaccional="-- Enabling the replication database \n" +
        "use master\n" +
        "exec sp_replicationdboption @dbname = N'"+baseDatos+"', @optname = N'publish', @value = N'true'\n" +
        "\n" +
        "-- Adding the transactional publication\n" +
        "use ["+baseDatos+"]\n" +
        "exec sp_addpublication @publication = N'"+nombrePubli+"', @description = N'Transactional publication of"
        + " database ''"+baseDatos+"'' from Publisher ''"+sitio+"''.', @sync_method = N'concurrent', @retention = 0, "
        + "@allow_push = N'true', @allow_pull = N'true', @allow_anonymous = N'true', @enabled_for_internet = N'false', "
        + "@snapshot_in_defaultfolder = N'true', @compress_snapshot = N'false', @ftp_port = 21, @ftp_login = N'anonymous',"
        + " @allow_subscription_copy = N'false', @add_to_active_directory = N'false', @repl_freq = N'continuous', @status = N'active',"
        + " @independent_agent = N'true', @immediate_sync = N'true', @allow_sync_tran = N'false', @autogen_sync_procs = N'false', "
        + "@allow_queued_tran = N'false', @allow_dts = N'false', @replicate_ddl = 1, "
        + "@enabled_for_p2p = N'true', @enabled_for_het_sub = N'false'\n" +
        "\n" +
        sqlP2Pconflict+
        "\n" +
        "exec sp_addpublication_snapshot @publication = N'"+nombrePubli+"', @frequency_type = 1, @frequency_interval = 0, "
        + "@frequency_relative_interval = 0, @frequency_recurrence_factor = 0, @frequency_subday = 0, @frequency_subday_interval = 0,"
        + " @active_start_time_of_day = 0, @active_end_time_of_day = 235959, @active_start_date = 0, @active_end_date = 0, @job_login = null, "
        + "@job_password = null, @publisher_security_mode = 1\n" +
        "\n" +
        "\n" +
        "use ["+baseDatos+"]\n" +
        "exec sp_addarticle @publication = N'"+nombrePubli+"', @article = N'Clientes', @source_owner = N'dbo', @source_object = N'Clientes', "
        + "@type = N'logbased', @description = null, @creation_script = null, @pre_creation_cmd = N'drop', "
        + "@schema_option = 0x000000000803509F, @identityrangemanagementoption = N'manual', @destination_table = N'Clientes', "
        + "@destination_owner = N'dbo', @vertical_partition = N'false', @ins_cmd = N'CALL sp_MSins_dboClientes', "
        + "@del_cmd = N'CALL sp_MSdel_dboClientes', @upd_cmd = N'SCALL sp_MSupd_dboClientes'\n" +
        "\n" +
        "\n" +
        "\n" +
        "";
        Conexion cc = new Conexion();
        //Connection cn=cc.conectarBase(sitio, Clientes.baseInicial);
        Connection cn=cc.conectarBase(sitio, baseDatos);
        //Connection cn=cc.conectar(sitio);
        boolean seCreo=true;
        try {
            Statement psd= cn.createStatement();
            psd.executeQuery(sqlCrearTransaccional);
            
            //ResultSet rs=psd.executeQuery(sqlCrearPublicacion);
            //sS_Pull_Cont_Inme();
        }catch(Exception ex){
            seCreo=false;
            JOptionPane.showMessageDialog(null,"Error al crear Publicacion P2P"+ex);
        }
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(PeerToPeer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(PeerToPeer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(PeerToPeer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(PeerToPeer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
//                new PeerToPeer().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnFinalizar;
    private javax.swing.JButton btnSiguiente;
    private javax.swing.JComboBox cbBasesDatos;
    private javax.swing.JComboBox cbSitios;
    private javax.swing.JComboBox cbTablas;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JTextField txtNombrePublicacion;
    // End of variables declaration//GEN-END:variables
}
